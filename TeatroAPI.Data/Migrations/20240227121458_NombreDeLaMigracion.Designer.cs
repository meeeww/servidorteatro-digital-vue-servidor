// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeatroAPI.Data;

#nullable disable

namespace TeatroAPI.Data.Migrations
{
    [DbContext(typeof(TeatroAPIContext))]
    [Migration("20240227121458_NombreDeLaMigracion")]
    partial class NombreDeLaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeatroAPI.Model.Funcion", b =>
                {
                    b.Property<int>("FuncionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionID"));

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ObraID")
                        .HasColumnType("int");

                    b.Property<int?>("ObraID1")
                        .HasColumnType("int");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.Property<int?>("SalaID1")
                        .HasColumnType("int");

                    b.HasKey("FuncionID");

                    b.HasIndex("ObraID");

                    b.HasIndex("ObraID1");

                    b.HasIndex("SalaID");

                    b.HasIndex("SalaID1");

                    b.ToTable("Funciones");
                });

            modelBuilder.Entity("TeatroAPI.Model.Obra", b =>
                {
                    b.Property<int>("ObraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObraID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObraID");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("TeatroAPI.Model.Reserva", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaID"));

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionID")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionID1")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioUserID")
                        .HasColumnType("int");

                    b.HasKey("ReservaID");

                    b.HasIndex("FuncionID");

                    b.HasIndex("FuncionID1");

                    b.HasIndex("UserID");

                    b.HasIndex("UsuarioUserID");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("TeatroAPI.Model.Sala", b =>
                {
                    b.Property<int>("SalaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaID"));

                    b.Property<int?>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalaID");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("TeatroAPI.Model.Sesion", b =>
                {
                    b.Property<int>("SessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionID"));

                    b.Property<string>("Dispositivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioUserID")
                        .HasColumnType("int");

                    b.HasKey("SessionID");

                    b.HasIndex("UserID");

                    b.HasIndex("UsuarioUserID");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("TeatroAPI.Model.Usuario", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TeatroAPI.Model.Funcion", b =>
                {
                    b.HasOne("TeatroAPI.Model.Obra", null)
                        .WithMany()
                        .HasForeignKey("ObraID");

                    b.HasOne("TeatroAPI.Model.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraID1");

                    b.HasOne("TeatroAPI.Model.Sala", null)
                        .WithMany()
                        .HasForeignKey("SalaID");

                    b.HasOne("TeatroAPI.Model.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaID1");

                    b.Navigation("Obra");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("TeatroAPI.Model.Reserva", b =>
                {
                    b.HasOne("TeatroAPI.Model.Funcion", null)
                        .WithMany()
                        .HasForeignKey("FuncionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeatroAPI.Model.Funcion", "Funcion")
                        .WithMany()
                        .HasForeignKey("FuncionID1");

                    b.HasOne("TeatroAPI.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeatroAPI.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioUserID");

                    b.Navigation("Funcion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TeatroAPI.Model.Sesion", b =>
                {
                    b.HasOne("TeatroAPI.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeatroAPI.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
